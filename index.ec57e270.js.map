{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAS,SAAS,cAAc,CAAC,UACjC,EAAO,SAAS,cAAc,CAAC,QAE/B,EAAO,EAAE,CAET,EAAS,EAAO,gBAAgB,CAAC,MAGvC,AAFgB,EAAK,gBAAgB,CAAC,MAE9B,OAAO,CAAC,SAAC,CAAjB,EAKE,IAAK,IAJC,EAAM,CAAC,EAEP,EAAM,EAAG,gBAAgB,CAAC,MAEvB,EAAI,EAAG,EAAI,EAAI,MAAM,CAAE,IAC9B,CAAG,CAAC,CAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAG,CAAG,CAAC,EAAE,CAAC,SAAS,CAG7C,EAAK,IAAI,CAAC,EACZ,GAEA,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,IAAM,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,MAE9B,GAAI,EAAM,CACR,IAAM,EAAU,EAAK,SAAS,CAE1B,EAAU,EAAI,GAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,OAAA,EAAkB,CAAC,CAAC,EAAQ,CAAE,CAAC,CAAC,EAAQ,C,GAGtC,CAAA,AAA0B,QAA1B,EAAQ,WAAW,IAAgB,AAA0B,WAA1B,EAAQ,WAAW,EAAO,GAC/D,CAAA,EAAW,EAAG,GAAS,IAAI,CAAC,SAAC,CAAA,CAAG,CADlC,EAEI,OAAO,CAAC,CAAC,EAAQ,CAAC,QAAQ,GAAG,MAAM,CAAG,CAAC,CAAC,EAAQ,CAAC,QAAQ,GAAG,MAAM,AACpE,EAAA,EAGF,EAAK,SAAS,CAAG,GAEjB,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,IAAK,IAAM,KAAO,EAAI,CACpB,IAAM,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,SAAS,CAAG,CAAE,CAAC,EAAI,CAEtB,EAAG,WAAW,CAAC,EACjB,CAIA,OAFA,EAAK,WAAW,CAAC,GAEV,CACT,EACF,CACF,GAEA,IAAM,EAAoB,SAAC,CAAA,CAAG,CAA9B,EACE,OAAO,EAAE,QAAQ,GAAG,aAAa,CAAC,EAAE,QAAQ,GAC9C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar header = document.getElementById(\"header\");\nvar body = document.getElementById(\"body\");\nvar rows = [];\nvar theads = header.querySelectorAll(\"th\");\nvar tbodies = body.querySelectorAll(\"tr\");\ntbodies.forEach(function(tb) {\n    var row = {};\n    var tds = tb.querySelectorAll(\"td\");\n    for(var i = 0; i < tds.length; i++)row[theads[i].innerText] = tds[i].innerText;\n    rows.push(row);\n});\nheader.addEventListener(\"click\", function(e) {\n    var head = e.target.closest(\"th\");\n    if (head) {\n        var mainKey = head.innerText;\n        var newRows = _to_consumable_array(rows).sort(function(a, b) {\n            return compareTwoStrings(a[mainKey], b[mainKey]);\n        });\n        if (mainKey.toLowerCase() === \"age\" || mainKey.toLowerCase() === \"salary\") newRows = _to_consumable_array(newRows).sort(function(a, b) {\n            return a[mainKey].toString().length - b[mainKey].toString().length;\n        });\n        body.innerHTML = \"\";\n        newRows.forEach(function(el) {\n            var tr = document.createElement(\"tr\");\n            for(var key in el){\n                var td = document.createElement(\"td\");\n                td.innerText = el[key];\n                tr.appendChild(td);\n            }\n            body.appendChild(tr);\n            return tr;\n        });\n    }\n});\nvar compareTwoStrings = function(a, b) {\n    return a.toString().localeCompare(b.toString());\n};\n\n//# sourceMappingURL=index.ec57e270.js.map\n","/* eslint-disable function-paren-newline */\n'use strict';\n\n// write code here\nconst header = document.getElementById('header');\nconst body = document.getElementById('body');\n\nconst rows = [];\n\nconst theads = header.querySelectorAll('th');\nconst tbodies = body.querySelectorAll('tr');\n\ntbodies.forEach((tb) => {\n  const row = {};\n\n  const tds = tb.querySelectorAll('td');\n\n  for (let i = 0; i < tds.length; i++) {\n    row[theads[i].innerText] = tds[i].innerText;\n  }\n\n  rows.push(row);\n});\n\nheader.addEventListener('click', (e) => {\n  const head = e.target.closest('th');\n\n  if (head) {\n    const mainKey = head.innerText;\n\n    let newRows = [...rows].sort((a, b) =>\n      compareTwoStrings(a[mainKey], b[mainKey]),\n    );\n\n    if (mainKey.toLowerCase() === 'age' || mainKey.toLowerCase() === 'salary') {\n      newRows = [...newRows].sort((a, b) => {\n        return a[mainKey].toString().length - b[mainKey].toString().length;\n      });\n    }\n\n    body.innerHTML = '';\n\n    newRows.forEach((el) => {\n      const tr = document.createElement('tr');\n\n      for (const key in el) {\n        const td = document.createElement('td');\n\n        td.innerText = el[key];\n\n        tr.appendChild(td);\n      }\n\n      body.appendChild(tr);\n\n      return tr;\n    });\n  }\n});\n\nconst compareTwoStrings = (a, b) => {\n  return a.toString().localeCompare(b.toString());\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","header","document","getElementById","body","rows","theads","querySelectorAll","tbodies","forEach","tb","row","tds","innerText","push","addEventListener","e","head","target","closest","mainKey","newRows","sort","a","b","compareTwoStrings","toLowerCase","innerHTML","el","tr","createElement","key","td","appendChild","localeCompare"],"version":3,"file":"index.ec57e270.js.map"}